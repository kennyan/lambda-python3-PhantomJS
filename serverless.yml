# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: lambda-python3-PhantomJS # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python3.6

# you can overwrite defaults here
  stage: ${opt:stage, self:custom.defaultStage}
  region: ${self:custom.region.${self:provider.stage}, self:custom.defaultRegion}

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"
  iamRoleStatements:
    - Effect: Allow
      Action:
        # - s3:GetObject
        # - s3:GetObjectAcl
        - s3:PutObject
        - s3:PutObjectAcl
      Resource:
        - arn:aws:s3:::${self:custom.environment.${self:provider.stage}.S3_BUCKET}/library/*


# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  webshot:
    handler: screenshot.webshot
    environment: ${self:custom.environment.${self:provider.stage}}
    timeout: 30
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
resources:
  Resources:
    # S3IamPolicy:
    #   Type: AWS::IAM::ManagedPolicy
    #   Properties:
    #     ManagedPolicyName: ${self:provider.stage}_${self:service}_lambda-s3
    #     PolicyDocument:
    #       Version: '2012-10-17'
    #       Statement:
    #         - Effect: Allow
    #           Action:
    #             # - s3:GetObject
    #             # - s3:GetObjectAcl
    #             - s3:PutObject
    #             - s3:PutObjectAcl
    #           Resource:
    #             - arn:aws:s3:::${self:custom.environment.${self:provider.stage}.S3_BUCKET}/library/*
    #     Roles:
    #       - Ref: IamRoleLambdaExecution
    ### このpolicyは手動でweb/appサーバのiam Roleに紐づける
    InvokeLambdaIamPolicy:
      Type: AWS::IAM::ManagedPolicy
      DependsOn:
        - IamRoleLambdaExecution
      Properties:
        ManagedPolicyName: ${self:provider.stage}_${self:service}_invoke-lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - lambda:InvokeAsync
                - lambda:InvokeFunction
              Resource:
                Fn::GetAtt:
                  - WebshotLambdaFunction
                  - Arn


custom:
  defaultStage: dev
  defaultRegion: us-east-1
  # defaultServiceDomain: "[\"localhost:3000\",\"q1stg.imobile.co.jp\",\"web.gogo.jp\",\"cms.tkcnf.com\",\"q2.tkcnf-stg.imobile.co.jp\",\"q2.tkcnf-itb.imobile.co.jp\",\"q2.tkcnf-test.imobile.co.jp\",\"www.tkcnf.com\",\"p2.tkcnf-stg.imobile.co.jp\",\"p2.tkcnf-itb.imobile.co.jp\",\"p2.tkcnf-test.imobile.co.jp\"]"
  defaultPhantomjsConf: "{\"POSTION_TOP\": 0,\"POSTION_LEFT\": 0,\"VIEWPORT_WIDTH\": 1024,\"VIEWPORT_HEIGHT\": 768 }"
  defaultPilConf: "{\"IMG_CROP_LEFT\": 0,\"IMG_CROP_TOP\": 0,\"IMG_CROP_RIGHT\": 1024,\"IMG_CROP_BOTTOM\": 768,\"SCR_RESIZE_WIDTH\": 512,\"SCR_RESIZE_HEIGHT\": 384,\"THUMB_RESIZE_WIDTH\": 128,\"THUMB_RESIZE_HEIGHT\": 96}"
  defaultSeleniumUserAgent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.111 Safari/537.36"
  defaultTmpDist: "/tmp/"
  defaultScrExtention: png
  defaultTmpFilenameRamSize: 10
  defaultLdLibraryPath: "/var/task/fontconfig/usr/lib/"

  region:
    dev: us-east-1
    stg: ap-northeast-1
    # palaustg: ap-northeast-1
    # palauitb: ap-northeast-1
    prod: ap-northeast-1
    # palauprod: ap-northeast-1

  environment:
    dev:
      ENV: dev
      PHANTOMJS_CONF: ${self:custom.defaultPhantomjsConf}
      PIL_CONF: ${self:custom.defaultPilConf}
      SELENIUM_USER_AGENT: ${self:custom.defaultSeleniumUserAgent}
      TMP_DIST: ${self:custom.defaultTmpDist}
      SCR_EXTENTION: ${self:custom.defaultScrExtention}
      TMP_FILENAME_RAM_SIZE: ${self:custom.defaultTmpFilenameRamSize}
      S3_ENDPOINT_URL: {{your S3 endpoint url}}
      S3_BUCKET: {{your bucket name}}
      LD_LIBRARY_PATH: ${self:custom.defaultLdLibraryPath}

    stg:
      ENV: stg
      PHANTOMJS_CONF: ${self:custom.defaultPhantomjsConf}
      PIL_CONF: ${self:custom.defaultPilConf}
      SELENIUM_USER_AGENT: ${self:custom.defaultSeleniumUserAgent}
      TMP_DIST: ${self:custom.defaultTmpDist}
      SCR_EXTENTION: ${self:custom.defaultScrExtention}
      TMP_FILENAME_RAM_SIZE: ${self:custom.defaultTmpFilenameRamSize}
      S3_ENDPOINT_URL: {{your S3 endpoint url}}
      S3_BUCKET: {{your bucket name}}
      LD_LIBRARY_PATH: ${self:custom.defaultLdLibraryPath}
    # palaustg:
    #   ENV: palaustg
    #   SERVICE_DOMAINS: ${self:custom.defaultServiceDomain}
    # palauitb:
    #   ENV: palauitb
    #   SERVICE_DOMAINS: ${self:custom.defaultServiceDomain}
    prod:
      ENV: prod
      PHANTOMJS_CONF: ${self:custom.defaultPhantomjsConf}
      PIL_CONF: ${self:custom.defaultPilConf}
      SELENIUM_USER_AGENT: ${self:custom.defaultSeleniumUserAgent}
      TMP_DIST: ${self:custom.defaultTmpDist}
      SCR_EXTENTION: ${self:custom.defaultScrExtention}
      TMP_FILENAME_RAM_SIZE: ${self:custom.defaultTmpFilenameRamSize}
      S3_ENDPOINT_URL: {{your S3 endpoint url}}
      S3_BUCKET: {{your bucket name}}
      LD_LIBRARY_PATH: ${self:custom.defaultLdLibraryPath}
    # palauprod:
    #   ENV: palauprod
    #   SERVICE_DOMAINS: ${self:custom.defaultServiceDomain}
